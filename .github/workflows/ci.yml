---
name: 'build-test'
on:
  pull_request:
  push:
    branches:
      - main
      - 'releases/*'

env:
  node_version: "12.x"
  custom_cache_key_element: "${{ github.sha }}-${{ github.run_id }}"

jobs:
  cancel-previous:
    runs-on: ubuntu-latest
    steps:
      - name: cancel previous runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

  lint:
    needs: cancel-previous
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.5

      - name: Setup Node.js
        uses: actions/setup-node@v2.4.1
        with:
          node-version: ${{ env.node_version }}

      - name: restore npm cache
        uses: c-hive/gha-npm-cache@v1.1.0

      - name: installing dependencies
        run: npm ci

      - name: check format
        run: npm run format-check

      - name: run lint
        run: npm run lint

      - name: Cancel complete workflow if this job fails...
        if: ${{ failure() }}
        uses: andymckay/cancel-action@0.2

  unittests:
    needs: cancel-previous
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2.3.5

      - name: Setup Node.js
        uses: actions/setup-node@v2.4.1
        with:
          node-version: ${{ env.node_version }}

      - name: restore npm cache
        uses: c-hive/gha-npm-cache@v1.1.0

      - name: installing dependencies
        run: npm ci

      - name: run tests
        uses: nick-invision/retry@v2.5.1
        with:
          timeout_minutes: 999
          max_attempts: 3
          retry_on: error
          command: npm test

  build:
    needs: cancel-previous
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.5

      - name: Setup Node.js
        uses: actions/setup-node@v2.4.1
        with:
          node-version: ${{ env.node_version }}

      - name: restore npm cache
        uses: c-hive/gha-npm-cache@v1.1.0

      - name: installing dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Package
        run: npm run package

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: update build
          file_pattern: dist/*

  populate_new_cache:
    name: populate new cache
    needs: build

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2.3.5
      - uses: ./
        id: cache
        with:
          requirement_files: "__tests__/dummy*.txt"
          custom_cache_key_element: ${{ env.custom_cache_key_element }}

      - name: assert cache-hit = true
        uses: nick-invision/assert-action@v1.1.0
        with:
          expected: false
          actual: ${{ steps.cache.outputs.cache-hit }}

      - name: create testfile to be cached (non-windows)
        if: matrix.os != 'windows-latest'
        run: |
          mkdir -p ${{ steps.cache.outputs.pip-cache-directory}}
          echo "test" > ${{ steps.cache.outputs.pip-cache-directory}}/${{ github.run_id }}.txt

      - name: create testfile to be cached (windows)
        if: matrix.os == 'windows-latest'
        run: |
          mkdir -p ${{ steps.cache.outputs.pip-cache-directory}}
          echo "test" > ${{ steps.cache.outputs.pip-cache-directory}}\${{ github.run_id }}.txt

      - name: install package for the download cache
        run: "pip install python-dateutil > pip_install.txt"

      - uses: pCYSl5EDgo/cat@master
        id: cat
        with:
          path: pip_install.txt

      - name: assert if package was downloaded
        uses: nick-invision/assert-action@v1.1.0
        with:
          comparison: contains
          expected: "Downloading"
          actual: ${{ steps.cat.outputs.text }}

  use_existing_cache:
    name: use existing cache
    needs: populate_new_cache

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2.3.5
      - uses: ./
        id: cache
        with:
          requirement_files: "__tests__/dummy*.txt"
          custom_cache_key_element: ${{ env.custom_cache_key_element }}

      - name: assert cache-hit = true
        uses: nick-invision/assert-action@v1.1.0
        with:
          expected: true
          actual: ${{ steps.cache.outputs.cache-hit }}

      - name: check if testfile exists (non-windows)
        if: matrix.os != 'windows-latest'
        run: cat ${{ steps.cache.outputs.pip-cache-directory}}/${{ github.run_id }}.txt

      - name: check if testfile exists (windows)
        if: matrix.os == 'windows-latest'
        run: cat ${{ steps.cache.outputs.pip-cache-directory}}\${{ github.run_id }}.txt

      - name: install package for the download cache
        run: "pip install python-dateutil > pip_install.txt"

      - uses: pCYSl5EDgo/cat@master
        id: cat
        with:
          path: pip_install.txt

      - name: assert if package using the cached download
        uses: nick-invision/assert-action@v1.1.0
        with:
          comparison: contains
          expected: "Using cached"
          actual: ${{ steps.cat.outputs.text }}

  runs_without_custom_key:
    name: runs without arguments
    needs: build

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2.3.5
      - name: create dummy requirements file
        run: echo "tests" > requirements.txt
      - uses: ./

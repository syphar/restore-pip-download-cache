---
name: 'build-test'
on:
  pull_request:
  push:
    branches:
      - main
      - 'releases/*'

env:
  node_version: "12.x"

jobs:
  cancel-previous:
    runs-on: ubuntu-latest
    steps:
    - name: cancel previous runs
      uses: styfle/cancel-workflow-action@0.6.0
      with:
        access_token: ${{ github.token }}

  unittests:
    needs: cancel-previous
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2.1.2
        with:
          node-version: ${{ env.node_version }}

      - name: restore npm cache
        uses: c-hive/gha-npm-cache@v1

      - name: installing dependencies
        run: npm ci

      - name: run tests
        run: npm run all

  test_build:
    needs: cancel-previous
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2.1.2
        with:
          node-version: ${{ env.node_version }}

      - name: restore npm cache
        uses: c-hive/gha-npm-cache@v1

      - name: installing dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Package
        run: npm run package

      - name: fail if build wasn't commited
        run: |
          if [ ! -z "$(git status --porcelain)" ]; then
            # If we get a fail here then this workflow needs attention...
            >&2 echo "build/package did change files. Did you forget to run the build locally?"
            exit 1
          fi

  populate_new_cache:
    name: populate new cache
    needs: test_build

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: ./
        id: cache
        with:
          requirement_files: "__tests__/dummy*.txt"
          custom_cache_key_element: ${{ github.run_id }}

      - uses: nick-invision/assert-action@v1
        with:
          expected: false
          actual: ${{ steps.cache.outputs.cache-hit }}

      - name: create testfile to be cached (non-windows)
        if: matrix.os != 'windows-latest'
        run: |
          mkdir -p ${{ steps.cache.outputs.pip-cache-directory}}
          echo "test" > ${{ steps.cache.outputs.pip-cache-directory}}/${{ github.run_id }}.txt

      - name: create testfile to be cached (windows)
        if: matrix.os == 'windows-latest'
        run: |
          mkdir -p ${{ steps.cache.outputs.pip-cache-directory}}
          echo "test" > ${{ steps.cache.outputs.pip-cache-directory}}\${{ github.run_id }}.txt

  use_existing_cache:
    name: use existing cache
    needs: populate_new_cache

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: ./
        id: cache
        with:
          requirement_files: "__tests__/dummy*.txt"
          custom_cache_key_element: ${{ github.run_id }}

      - uses: nick-invision/assert-action@v1
        with:
          expected: true
          actual: ${{ steps.cache.outputs.cache-hit }}

      - name: check if testfile exists (non-windows)
        if: matrix.os != 'windows-latest'
        run: cat ${{ steps.cache.outputs.pip-cache-directory}}/${{ github.run_id }}.txt

      - name: check if testfile exists (windows)
        if: matrix.os == 'windows-latest'
        run: cat ${{ steps.cache.outputs.pip-cache-directory}}\${{ github.run_id }}.txt

  runs_without_custom_key:
    name: runs without arguments
    needs: test_build

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: create dummy requirements file
        run: echo "tests" > requirements.txt
      - uses: ./
